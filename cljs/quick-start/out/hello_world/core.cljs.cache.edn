;; Analyzed by ClojureScript 1.7.48
{:name hello-world.core, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires {nodejs cljs.nodejs, cljs.nodejs cljs.nodejs}, :imports nil, :defs {-main {:protocol-inline nil, :meta {:file "/Users/zacharyryansmith/Code/misc-exercises/cljs/quick-start/src/hello_world/core.cljs", :line 6, :column 7, :end-line 6, :end-column 12, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name hello-world.core/-main, :variadic true, :file "src/hello_world/core.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, foo {:protocol-inline nil, :meta {:file "/Users/zacharyryansmith/Code/misc-exercises/cljs/quick-start/src/hello_world/core.cljs", :line 11, :column 7, :end-line 11, :end-column 10, :arglists (quote ([a b]))}, :name hello-world.core/foo, :variadic false, :file "src/hello_world/core.cljs", :end-column 10, :method-params ([a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a b]))}}}